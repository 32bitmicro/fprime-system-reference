// ======================================================================
// \title  LinuxPwmDriver.hpp
// \author fprime
// \brief  hpp file for LinuxPwmDriver component implementation class
// ======================================================================

#ifndef LinuxPwmDriver_HPP
#define LinuxPwmDriver_HPP

#include "SystemReference/Drv/LinuxPwmDriver/LinuxPwmDriverComponentAc.hpp"

namespace Drv {

  class LinuxPwmDriver :
    public LinuxPwmDriverComponentBase
  {

    public:

      // ----------------------------------------------------------------------
      // Construction, initialization, and destruction
      // ----------------------------------------------------------------------

      //! Construct object LinuxPwmDriver
      //!
      LinuxPwmDriver(
          const char *const compName /*!< The component name*/
      );

      //! Destroy object LinuxPwmDriver
      //!
      ~LinuxPwmDriver();

    PRIVATE:

      // ----------------------------------------------------------------------
      // Handler implementations for user-defined typed input ports
      // ----------------------------------------------------------------------

      //! Handler implementation for enableDisable
      //!
      Fw::Success enableDisable_handler(
          const NATIVE_INT_TYPE portNum, /*!< The port number*/
          const Fw::Enabled &operationType 
      );

      //! Handler implementation for onTime
      //!
      Fw::Success onTime_handler(
          const NATIVE_INT_TYPE portNum, /*!< The port number*/
          U32 operationValue /*!< 
      On time in nanoseconds
      */
      );

      //! Handler implementation for period
      //!
      Fw::Success period_handler(
          const NATIVE_INT_TYPE portNum, /*!< The port number*/
          U32 operationValue /*!< 
      Period in nanoseconds
      */
      );


    };

} // end namespace Drv

#endif
